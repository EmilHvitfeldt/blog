<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tidyverse on Hvitfeldt&#39;s blog</title>
    <link>/tags/tidyverse/</link>
    <description>Recent content in Tidyverse on Hvitfeldt&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/tidyverse/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Analysing useR!2017 schedule data</title>
      <link>/2017/07/20/analysing-user-2017-schedule-data/</link>
      <pubDate>Thu, 20 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/20/analysing-user-2017-schedule-data/</guid>
      <description>After attending useR!2017 for the first time, which great pleasure and new connections made. I decided to see if I could extract some of the information available in the public schedule. So as with my last post I’ll do a bit of scraping followed by a few visualizations.
Packages library(tidyverse) library(stringr) library(utils) library(plotly) library(ltm) require(visNetwork)  Web scraping I found this task easiest with the help of purrr:map().</description>
    </item>
    
    <item>
      <title>Repetition in musicals with tidytext</title>
      <link>/2017/06/05/repetition-in-musicals-with-tidytext/</link>
      <pubDate>Mon, 05 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/05/repetition-in-musicals-with-tidytext/</guid>
      <description>Lately I have been wondering how to quantify how repetitive a text is, specifically how repetitive are the lyrics to songs. I’m by no means the first one, Colin Morris did a great piece on language compression with his Are Pop Lyrics Getting More Repetitive? which i highly recommend you go read. Instead of looking at pop lyrics will we instead be focusing some popular musicals to see if general patterns emerge within each show.</description>
    </item>
    
    <item>
      <title>2017 World Press Freedom Index with emojis</title>
      <link>/2017/04/26/2017-world-press-freedom-index-with-emojis/</link>
      <pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/04/26/2017-world-press-freedom-index-with-emojis/</guid>
      <description>With Reporters Without Borders coming out with its 2017 World Press Freedom Index in the same week as Hadley Wickham comming out with the emo(ji) package, I had no choice but to explore both of them at the same time.
Disclamer! This post is not an exercise in statistical inference but rather a proof of concept of how to use the emo(ji) package with ggplot2.
Loading packages library(hrbrthemes) library(tidyverse) ## Warning: Installed Rcpp (0.</description>
    </item>
    
  </channel>
</rss>